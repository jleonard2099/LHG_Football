'----------------------------------------
'          ChooseTeam Subroutine
'----------------------------------------
'Provides dialog for user to select teams
' from a previously populated team file.
'The focus of this routine is to accept
' a disk ID from the user. It then relies
' on separate subroutines to assist with
' actually choosing the team, and also
' reading in data for the chosen team
Sub ChooseTeam (yearNumber$, numberTeams, chosenIdx, teamName$)

    Shared teamRatings%()

    'Shared teamNames$()

    Shared previousYear$

    Do

        Color 15, 0
        Cls

        JJ = 7

        Locate 6, 8
        Color 15, 4

        Print " " + Chr$(214); String$(61, 196); Chr$(183) + " ";

        For II = 1 To JJ
            Locate 6 + II, 8
            Print " " + Chr$(186); String$(61, 32); Chr$(186) + " ";
        Next

        Locate 7 + JJ, 8
        Print " " + Chr$(211); String$(61, 196); Chr$(189) + " ";

        Locate 7, 32

        Locate , 12: Print "ENTER DISK ID: "
        Print
        Locate , 12: Print "THE DISK ID IS USUALLY THE LAST TWO DIGITS OF THE"
        Locate , 12: Print "SEASON DISK YOU ARE PLAYING FROM (IE. 89, 76, 67)."
        Print
        Locate , 12: Print "HIT <ENTER> TO USE PREVIOUS ID"

        I$ = GetKeyPress$

        If I$ <> Chr$(27) Then

            If I$ <> Chr$(13) Then

                Locate 7, 27: Print I$
                Locate 7, 28: Line Input NY$
                NY$ = I$ + NY$
                Color 15, 0

                If Not (NY$ = "" And yearNumber$ <> "") Then

                    yearNumber$ = RTrim$(NY$)
                    Erase teamNames$
                    numberTeams = 0

                    Cls

                    If Not _FileExists(diskPaths$(0) + TEAM_FILE_NAME$ + "." + yearNumber$) Then

                        MsgText$ = "NO TEAM FILES WERE FOUND MATCHING THIS ID. PRESS ANY KEY TO RETURN TO MAIN MENU"
                        BoxWidth = 20
                        BoxHeight = (Len(MsgText$) / BoxWidth) + 3 'top and box lines + 1 extra
                        Locate ((25 - BoxHeight) / 2), (80 - ((BoxWidth + 2) / 2))
                        Call CSMsgBox(MsgText$, BoxWidth, Pass)
                        I$ = GetKeyPress$
                        Call CSMsgBox("", 0, Pass)
                        Exit Sub

                    Else

                        Open diskPaths$(0) + TEAM_FILE_NAME$ + "." + yearNumber$ For Random As #1 Len = TEAM_SIZE_BYTES

                        fileLength& = LOF(1)

                        Field #1, 15 As Q$(0)

                        numberTeams = fileLength& / TEAM_SIZE_BYTES

                        For teamIdx = 1 To numberTeams
                            Get #1, teamIdx
                            'numberTeams = numberTeams + 1
                            teamNames$(teamIdx) = Q$(0)
                            teamIndex%(teamIdx) = teamIdx
                        Next teamIdx

                        Close #1

                        previousYear$ = yearNumber$
                        
                    End If 'Done checking if file exists

                End If 'Done checking for blank year number

            Else

                yearNumber$ = previousYear$

            End If 'Done checking for ENTER key

            'Locate 2, 33
            'Color 31: Print "LOADING..."

            Do

                Call SelectTeam(numberTeams, yearNumber$, chosenIdx, teamName$, ExitCode%)

                If ExitCode% <> 27 And numberTeams <> 0 Then

                    Do
                        YCoord = Int((80 - Len(teamName$)) / 2)
                        Locate 2, YCoord
                        Color teamRatings%(2), teamRatings%(1): Print teamName$

                        Color 15, 4
                        Locate 3, 32: Print "ANY CHANGE? (Y/N)";

                        J$ = GetKeyPress$

                    Loop Until J$ = Chr$(27) Or UCase$(J$) = "Y" Or UCase$(J$) = "N"

                End If

            Loop Until ExitCode% = 27 Or J$ = Chr$(27) Or UCase$(J$) = "N"

        End If 'Done checking for ESC

    Loop Until UCase$(J$) = "N" Or I$ = Chr$(27) 'Or J$ = Chr$(27)

    If I$ = Chr$(27) Or J$ = Chr$(27) Then chosenIdx = 0

End Sub


'----------------------------------------
'          SelectTeam Subroutine
'----------------------------------------
'Presents selection menu of all teams 
' found in the target "disk" file. 
'The focus of this routine is confirming 
' a team choice. It then relies on 
' another subroutine to read in data 
' from the selected team.
Sub SelectTeam (numberTeams, yearNumber$, selectedIdx, teamName$, ExitCode%)

    'Shared teamNames$()

    If numberTeams > 0 Then

        SELECTION% = 1
        Count% = numberTeams
        Start% = 1
        FileFGColor% = 15: FileBGColor% = 4
        HiLiteFGColor% = 0: HiLiteBGColor% = 7
        Rows% = 20
        Columns% = 4
        Spacing% = 6
        Row% = 4
        Column% = 1

        Color , 4
        Cls
        Color 14
        Locate , 33: Print "TEAM SELECTION"
        Locate 25, 1
        Color 14: Print "ESC";: Color 15: Print "-SELECT NEW ID  PGDN  PGUP  ";
        Color 14: Print "ENTER";: Color 15: Print "-SELECTS TEAM";

        _MouseShow "DEFAULT"
        MAMenu teamNames$(), SELECTION%, Start%, Count%, ExitCode%, FileFGColor%, FileBGColor%, HiLiteFGColor%, HiLiteBGColor%, Rows%, Columns%, Spacing%, Row%, Column%
        _MouseHide

        If ExitCode% <> 27 Then

            selectedIdx = teamIndex%(SELECTION%)

            'Locate 2, 33
            'Color 31: Print "LOADING..."

            Call ReadTeam(yearNumber$, teamName$, selectedIdx)
            'Call ReadExtraData(yearNumber$, teamName$, selectedIdx)

        End If

    End If

End Sub


'----------------------------------------
'           ReadTeam Subroutine
'----------------------------------------
'Reads in all data for the selected team, 
' given it's index in the team file. 
'This routine is highly customized TO
' the specific game for which it has
' been included for.
Sub ReadTeam (teamYear$, targetTeam$, teamIdx)

    Shared ydsCompAdj

    Shared mascot$, teamNick$

    Shared leagueRatings%(), teamRatings%()
    
    Shared rushContrib(), rushAvg(), rbRecepts(), rbRecAvg()
    Shared recContrib(), wrRecAvg()
    Shared passContrib(), compPct(), qbIntPct()
    Shared krContrib(), krRetAvg(), prContrib(), prRetAvg()
    Shared puntAvg()
    Shared pkFGA(), pkFGContrib(), pkPAT(), pkPATContrib()
    Shared numInts(), numSacks(), armRating()

    Shared intName$(), krName$()
    Shared pkName$(), prName$(), punterName$()
    Shared qbName$(), rbName$()
    Shared sackName$(), wrName$()

    Open diskPaths$(0) +  TEAM_FILE_NAME$ + "." + teamYear$ For Random As #1 Len = TEAM_SIZE_BYTES

    Field #1, 15 As Q$(1), 15 As Q$(2), 2 As Q$(3), 2 As Q$(4), 2 As Q$(5), 2 As Q$(6), 2 As Q$(7), 2 As Q$(8), 2 As Q$(9), 2 As Q$(10), 2 As Q$(11), 2 As Q$(12), 2 As Q$(13), 2 As Q$(14), 2 As Q$(15), 200 As Q$(0), 200 As Q$(199), 200 As Q$, 200 As Q$, 78 As Q$(0)

    Field #1, 56 As Q$(0), 12 As Q$(16), 2 As Q$(17), 2 As Q$(18), 2 As Q$(19), 2 As Q$(20), 12 As Q$(21), 2 As Q$(22), 2 As Q$(23), 2 As Q$(24), 2 As Q$(25), 200 As Q$, 200 As Q$(200), 238 As Q$(201), 200 As Q$

    Field #1, 96 As Q$(0), 12 As Q$(26), 2 As Q$(27), 2 As Q$(28), 2 As Q$(29), 2 As Q$(30), 12 As Q$(31), 2 As Q$(32), 2 As Q$(33), 2 As Q$(34), 2 As Q$(35), 200 As Q$(199), 200 As Q$(200), 198 As Q$(201), 200 As Q$

    Field #1, 136 As Q$(0), 12 As Q$(36), 2 As Q$(37), 2 As Q$(38), 2 As Q$(39), 2 As Q$(40), 12 As Q$(41), 2 As Q$(42), 2 As Q$(43), 2 As Q$(44), 2 As Q$(45), 200 As Q$(199), 200 As Q$(200), 158 As Q$(201), 200 As Q$

    Field #1, 176 As Q$(0), 12 As Q$(46), 2 As Q$(47), 2 As Q$(48), 2 As Q$(49), 2 As Q$(50), 12 As Q$(51), 2 As Q$(52), 2 As Q$(53), 2 As Q$(54), 2 As Q$(55), 200 As Q$(199), 200 As Q$(200), 118 As Q$(201), 200 As Q$

    Field #1, 216 As Q$(0), 12 As Q$(56), 2 As Q$(57), 2 As Q$(58), 2 As Q$(59), 2 As Q$(60), 12 As Q$(61), 2 As Q$(62), 2 As Q$(63), 2 As Q$(64), 2 As Q$(65), 200 As Q$(199), 200 As Q$(200), 78 As Q$(201), 200 As Q$

    Field #1, 200 As Q$(0), 56 As Q$, 12 As Q$(66), 2 As Q$(67), 2 As Q$(68), 12 As Q$(69), 2 As Q$(70), 2 As Q$(71), 12 As Q$(72), 2 As Q$(73), 2 As Q$(74), 200 As Q$(99), 200 As Q$(200), 200 As Q$, 30 As Q$

    Field #1, 200 As Q$(0), 100 As Q$, 4 As Q$(201), 12 As Q$(75), 2 As Q$(76), 2 As Q$(77), 12 As Q$(78), 2 As Q$(79), 2 As Q$(80), 12 As Q$(81), 2 As Q$(82), 2 As Q$(83), 200 As Q$(199), 182 As Q$(200), 200 As Q$

    Field #1, 200 As Q$(0), 152 As Q$(201), 12 As Q$(84), 2 As Q$(85), 2 As Q$(86), 2 As Q$(87), 2 As Q$(88), 12 As Q$(89), 2 As Q$(90), 2 As Q$(91), 2 As Q$(92), 2 As Q$(93), 200 As Q$(199), 200 As Q$(200), 142 As Q$(202)

    Field #1, 200 As Q$(0), 192 As Q$(201), 12 As Q$(94), 2 As Q$(95), 2 As Q$(96), 2 As Q$(97), 2 As Q$(98), 12 As Q$(99), 2 As Q$(100), 2 As Q$(101), 2 As Q$(102), 2 As Q$(103), 200 As Q$(199), 200 As Q$(200), 102 As Q$(202)

    Field #1, 200 As Q$(0), 200 As Q$(199), 32 As Q$(200), 12 As Q$(104), 2 As Q$(105), 2 As Q$(106), 12 As Q$(107), 2 As Q$(108), 2 As Q$(109), 12 As Q$(110), 2 As Q$(111), 2 As Q$(112), 200 As Q$(201), 200 As Q$(202), 54 As Q$(203)

    Field #1, 200 As Q$(0), 200 As Q$(199), 80 As Q$(200), 12 As Q$(113), 2 As Q$(114), 2 As Q$(115), 12 As Q$(116), 2 As Q$(117), 2 As Q$(118), 12 As Q$(119), 2 As Q$(120), 2 As Q$(121), 200 As Q$(201), 200 As Q$(202), 6 As Q$(203)

    Field #1, 200 As Q$, 200 As Q$, 128 As Q$, 12 As Q$(122), 2 As Q$(123), 12 As Q$(124), 2 As Q$(125), 2 As Q$(126), 2 As Q$(127), 2 As Q$(128), 12 As Q$(129), 2 As Q$(130), 2 As Q$(131), 2 As Q$(132), 2 As Q$(133), 2 As Q$(134), 200 As Q$, 150 As Q$

    Field #1, 200 As Q$(0), 200 As Q$(199), 184 As Q$(200), 12 As Q$(135), 2 As Q$(136), 12 As Q$(137), 2 As Q$(138), 12 As Q$(139), 2 As Q$(140), 12 As Q$(141), 2 As Q$(142), 12 As Q$(143), 2 As Q$(144), 200 As Q$(201), 80 As Q$(202)

    Field #1, 200 As Q$(0), 100 As Q$, 200 As Q$(199), 154 As Q$(200), 12 As Q$(145), 2 As Q$(146), 12 As Q$(147), 2 As Q$(148), 12 As Q$(149), 2 As Q$(150), 12 As Q$(151), 2 As Q$(152), 12 As Q$(153), 2 As Q$(154), 200 As Q$(201), 10 As Q$(202)

    Field #1, 200 As Q$(0), 100 As Q$, 200 As Q$(199), 224 As Q$(200), 12 As Q$(155), 2 As Q$(156), 12 As Q$(157), 2 As Q$(158), 12 As Q$(159), 2 As Q$(160), 12 As Q$(161), 2 As Q$(162), 12 As Q$(163), 2 As Q$(164), 140 As Q$(201)

    Field #1, 200 As Q$(0), 200 As Q$, 200 As Q$(199), 194 As Q$(200), 12 As Q$(165), 2 As Q$(166), 12 As Q$(167), 2 As Q$(168), 12 As Q$(169), 2 As Q$(170), 12 As Q$(171), 2 As Q$(172), 12 As Q$(173), 2 As Q$(174), 70 As Q$(201)

    Field #1, 232 As Q$(0), 200 As Q$, 200 As Q$(199), 232 As Q$(200), 12 As Q$(175), 2 As Q$(176), 12 As Q$(177), 2 As Q$(178), 12 As Q$(179), 2 As Q$(180), 12 As Q$(181), 2 As Q$(182), 12 As Q$(183), 2 As Q$(184)

    Get #1, teamIdx

    targetTeam$ = RTrim$(Q$(1))
    mascot$ = RTrim$(Q$(2))

    For I = 0 To 7: 
        leagueRatings%(I) = CVI(Q$(I + 3))
    Next I

    For I = 0 To 4: 
        teamRatings%(I) = CVI(Q$(I + 11))
    Next I

    'Running Backs
    For I = 0 To 9
        'Name
        rbName$(I) = Q$(I * 5 + 16)
        'Rush Att
        rushContrib(I) = CVI(Q$(I * 5 + 17))
        'Rush Avg
        rushAvg(I) = CVI(Q$(I * 5 + 18))
        'Receptions
        rbRecepts(I) = CVI(Q$(I * 5 + 19))
        'Rec Avg
        rbRecAvg(I) = CVI(Q$(I * 5 + 20))
    Next I

    'Wide Receivers
    For I = 0 To 5
        'Name
        wrName$(I) = Q$(I * 3 + 66)
        'Receptions
        recContrib(I) = CVI(Q$(I * 3 + 67))
        'Rec Avg
        wrRecAvg(I) = CVI(Q$(I * 3 + 68))
    Next I

    'Quarterbacks
    For I = 0 To 3
        'Name
        qbName$(I) = Q$(I * 5 + 84)
        'Attempts
        passContrib(I) = CVI(Q$(I * 5 + 85))
        'Completion %
        compPct(I) = CVI(Q$(I * 5 + 86))
        'Interception %
        qbIntPct(I) = CVI(Q$(I * 5 + 87))
        'Arm Rating | Yds/Comp Adj
        armRating(I) = CVI(Q$(I * 5 + 88))
    Next I

    'Kickoff Returners
    For I = 0 To 2
        'Name
        krName$(I) = Q$(I * 3 + 104)
        'Returns
        krContrib(I) = CVI(Q$(I * 3 + 105))
        'Return Avg
        krRetAvg(I) = CVI(Q$(I * 3 + 106))
    Next I

    'Punt Returners
    For I = 0 To 2
        'Name
        prName$(I) = RTrim$(Q$(I * 3 + 113))
        'Returns
        prContrib(I) = CVI(Q$(I * 3 + 114))
        'Return Avg
        prRetAvg(I) = CVI(Q$(I * 3 + 115))
    Next I

    'Punter Name
    punterName$(0) = RTrim$(Q$(122))
    'Punt Average
    puntAvg(0) = CVI(Q$(123))

    'Place Kickers
    For I = 0 To 1
        'Name
        pkName$(I) = RTrim$(Q$(I * 5 + 124))
        'FGA
        pkFGA(I) = CVI(Q$(I * 5 + 125))
        'FG%
        pkFGContrib(I) = CVI(Q$(I * 5 + 126))
        'PAT
        pkPAT(I) = CVI(Q$(I * 5 + 127))
        'PAT %
        pkPATContrib(I) = CVI(Q$(I * 5 + 128))

    Next I

    ydsCompAdj = CVI(Q$(134))

    'Sacks
    For I = 0 To 14
        'Name
        sackName$(I) = Q$(I * 2 + 135)
        '# Sacks
        numSacks(I) = CVI(Q$(I * 2 + 136))
    Next I

    'Interceptions
    For I = 0 To 9
        'Name
        intName$(I) = Q$(I * 2 + 165)
        '# Ints
        numInts(I) = CVI(Q$(I * 2 + 166))
    Next I

    'Close team file
    Close #1

End Sub


'----------------------------------------
'        ReadExtraData Subroutine
'----------------------------------------
'Reads in extra data for the selected team, 
' given it's index in the team file. 
'This extra file usually includes info.
' related to stadiums, coaches, etc.
'This routine is highly customized TO
' the specific game for which it has
' been included for.
Sub ReadExtraData (teamYear$, teamIdx)

    Shared teamAttendance&

    Shared stadium$, Z$
    
    If Not _FileExists(diskPaths$(0) + DATA_FILE_NAME$ + "." + teamYear$) Then

		MsgText$ = "WARNING!!! NO DATA FILE WAS FOUND FOR THIS TEAM. PRESS ANY KEY TO CONTINUE"
		BoxWidth = 20
		BoxHeight = (Len(MsgText$) / BoxWidth) + 3 'top and box lines + 1 extra
		Locate ((25 - BoxHeight) / 2), (80 - ((BoxWidth + 2) / 2))
		Call CSMsgBox(MsgText$, BoxWidth, Pass)
		I$ = GetKeyPress$
		Call CSMsgBox("", 0, Pass)

    Else

        Open diskPaths$(0) + DATA_FILE_NAME$ + "." + teamYear$ For Random As #2 Len = DATA_SIZE_BYTES

        Field #2, 15 As X$, 30 As QQ$(1), 4 As QQ$(3), 1 As QQ$(4)

        Get #2, teamIdx

        stadium$ = RTrim$(QQ$(1))
        teamAttendance& = CVL(QQ$(3))
        Z$ = QQ$(4)

        Close #2

        If Z$ <> "x" Then 
            stadium$ = ""
            teamAttendance& = 0
        End If

    End If

End Sub


'----------------------------------------
'         nameStatFile$ Function
'----------------------------------------
'Helps create uniquely named file to 
' store a team's stats.
'
'There are 2 main changes done in order
' to accomodate this:
' 1) Replaces invalid characters with _
' 2) If "ST" is the name, shortens the
'    prefix. This helps with college
'    teams (ARKANSAS vs ARKANSAS ST)
Function nameStatFile$ (teamName$)

    teamPrefix$ = teamName$
    
    For XX = 4 To 11

        If Mid$(teamPrefix$, XX, 1) = " " Or Mid$(teamPrefix$, XX, 1) = "." Or Mid$(teamPrefix$, XX, 1) = "/" Or Mid$(teamPrefix$, XX, 1) = "_" Then 
            Mid$(teamPrefix$, XX, 1) = "_"
        End If

    Next XX

    For XX = 12 To 14

        If Mid$(teamPrefix$, XX, 2) = "ST" Then 
            Mid$(teamPrefix$, 9, 1) = "_"
            Mid$(teamPrefix$, 10, 2) = "ST"
        End If

    Next XX

    'Length of 'converted' name for file
    '-- update this if we want to support long files
    QQ = 8

    For XX = 11 To 4 Step -1
        If Mid$(teamPrefix$, XX, 1) = "_" Then
            QQ = XX - 4
        Else
            Exit For
        End If
    Next XX

    nameStatFile$ = Mid$(teamPrefix$, 4, QQ) + "." + Left$(teamPrefix$, 2)

End Function


'----------------------------------------
'        ChooseFile$ Function
'----------------------------------------
'Shows user a file selection menu, based
' on the file spec parameter passed.
'
'fileSpec$ - file specification to load 
'            should include base path.
'
' EXAMPLE - C:\Temp\*.tmp
'
'fileDesc$ - brief description of the 
'            type of file
'
' RETURNS - base name of chosen file 
'            (that is, without extension)
Function ChooseFile$ (fileSpec$, fileDesc$, ExitCode%)

    descLength = Len(fileDesc$)

    Do
        'Display list of files...

        Count% = FileCount%(fileSpec$)

        If Count% = 0 Then

            Locate 10, 8
            zeroCountMsg$ = "NO " + fileDesc$ + " FILES WERE FOUND... PRESS ANY KEY TO RETURN TO MAIN MENU"

            Call CSMsgBox(zeroCountMsg$, 20, Pass)
            I$ = GetKeyPress$
            Call CSMsgBox("", 0, Pass)

        Else

            ReDim foundFiles$(0 To Count%)

            'For X = 1 To Count%
                '8 char's filename + 4 char's (. + ext)
                'foundFiles$(X) = Space$(12)
            'Next

            foundFiles$(0) = fileSpec$
            Call ReadFile(foundFiles$())

            Do

                XCoord = Int((80 - (descLength + 12)) / 2)
                
                Color , 1
                Cls
                Locate , XCoord
                Color 14
                Print "SELECT "; fileDesc$; " FILE"
                Color 15
                Selection% = 1
                START% = 1
                FileFGColor% = 15: FileBGColor% = 1
                HiLiteFGColor% = 0: HiLiteBGColor% = 7
                Rows% = 20
                Columns% = 4
                Spacing% = 6
                Row% = 4
                Column% = 1
                Locate 25, 1
                Color 14
                Print "ENTER";
                Color 15
                Print "-SELECTS "; fileDesc$;
                Color 14
                Locate , 55
                Print "HIT ESCAPE KEY TO EXIT";
                Color 15

                _MouseShow "DEFAULT"
                MAMenu foundFiles$(), Selection%, START%, Count%, ExitCode%, FileFGColor%, FileBGColor%, HiLiteFGColor%, HiLiteBGColor%, Rows%, Columns%, Spacing%, Row%, Column%
                _MouseHide

                If ExitCode% <> 27 Then

                    Color 15, 1
                    targetFile$ = RTrim$(foundFiles$(Selection%))
                    XCoord = Int((80 - Len(targetFile$))/2)
                    Locate 2, XCoord
                    Print targetFile$

                    Do
                        Locate , 31
                        Print "ANY CHANGE? (Y/N)";
                        I$ = GetKeyPress$
                    Loop Until UCase$(I$) = "Y" Or UCase$(I$) = "N"

                    Color 15, 0

                End If

            Loop Until UCase$(I$) = "N" Or ExitCode% = 27

        End If 'Done checking file count

        '...Until we press ESC
    Loop Until ExitCode% = 27 Or Count% = 0 Or UCase$(I$) = "N"

    If ExitCode% <> 27 Then
        ChooseFile$ = Left$(RTrim$(targetFile$), Len(targetFile$) - 4)
    End If

End Function

