DEFINT A-Z
DECLARE SUB CSMsgBox (Message$, Wdth, Cnf AS ANY)
DECLARE SUB TITLE ()
DECLARE SUB GETKEY ()
DECLARE SUB ReadFile (BYVAL Address%)
DECLARE SUB SortStr (BYVAL Address%, Size%, Direction%)
DECLARE SUB MAMenu (BYVAL Address%, SELECTION%, Start%, Count%, EXITCODE%, FileColr%, HiLiteColr%, Rows%, Columns%, Spacing%, Row%, Column%)
DECLARE FUNCTION QPRTrim$ (Work$)
DECLARE SUB MQPrint (X$, Colr)
DECLARE FUNCTION FCount% (FSpec$)
DECLARE SUB MPaintBox (ULRow, ULCol, LRRow, LRCol, Colr)
DECLARE SUB MScrnSave (ULRow, ULCol, LRRow, LRCol, SEG Address)
DECLARE SUB MScrnRest (ULRow, ULCol, LRRow, LRCol, SEG Address)
DECLARE FUNCTION GetDrive% ()
DECLARE FUNCTION EXIST (FILENAME$)
DECLARE FUNCTION FCount% (FSpec$)
DECLARE SUB Box0 (ULRow%, ULCol%, LRRow%, LRCol%, Char%, Colr%)
DECLARE SUB MMenuVert (BYVAL Address%, Choice%, Start%, SCANCODE%, NormClr%, HiLite%, NumRows%, Row%, Column%)
DECLARE SUB ReadFile (BYVAL Address%)
DECLARE SUB KILLFILE (FILENAME$)

   '$INCLUDE: 'QEditype.BI'
DECLARE SUB QEdit (array$(), Ky$, Action, Ed AS EditInfo)
   DIM Ed AS EditInfo              'create the editor's data structure
   DIM VV$(500), V%(500), U5$(3), G9$(5), WN$(3), WT$(3), SD$(3), R5$(1)
   DIM Y8$(3), Y9$(5), LO$(2), A6(3), A7(3), A8(3), QX%(3), MO$(3), A3$(4)
   DIM PA%(4), DRI$(2), ITEM$(8), E%(13)
   DIM A$(11), A(11), Q$(375), AP%(1), T(34)
   DIM H$(20), V$(20), Z1$(30), Z2$(30), Z1%(30)
   DIM QV$(20), QH$(20), SC$(2), HS%(1500), VS%(1500)
   DIM Y AS LONG, U6 AS SINGLE, D AS LONG, M AS LONG

   '$INCLUDE: 'DEFCNF.BI'
   '$INCLUDE: 'SetCnf.BI'          'queries the system info for MsgBox

    F2$ = CHR$(0) + CHR$(60)        'extended code for the F2 function key
                                    '(used in this demo to change margins)
    F3$ = CHR$(0) + CHR$(61)

   MO$(0) = "HH"
   MO$(1) = "C1"
   MO$(2) = "C2"
   MO$(3) = "CC"
   D1% = GetDrive%
10 COLOR 7, 0: CLS
   REDIM YN$(1500, 1), NG%(1500, 20)
   REDIM DY(1500) AS LONG
   NG%(0, 8) = 0
   NG%(0, 3) = 1
   NG%(0, 7) = 0
   NG%(0, 2) = 1
   A3$(4) = "RANDOM"
   YN$(0, 0) = ""
   YN$(0, 1) = ""
   FOR I = 1 TO 1500
   NG%(I, 13) = 0
   NEXT
   DT$ = "10-01-91"
   TM$ = "07:30P"
   OPEN "DEV.BAS" FOR INPUT AS #1
   INPUT #1, DRI$(0)
   INPUT #1, DRI$(1)
   INPUT #1, DRI$(2)
   CLOSE 1
   U5$(0) = "HUMAN OPPONENT      ": U5$(1) = "COMPUTER IS TEAM 1  "
   U5$(2) = "COMPUTER IS TEAM 2  ": U5$(3) = "COMPUTER VS COMPUTER"
   G9$(0) = "PLAY USING COLLEGE RULES"
   G9$(1) = "PLAY USING NFL RULES    "
   G9$(2) = "PLAY USING USFL RULES   "
   G9$(3) = "PLAY USING AFL RULES    "
   G9$(4) = "PLAY USING WFL RULES    "
   G9$(5) = "PLAY USING WLAF RULES   "
   WN$(0) = "NONE             "
   WN$(1) = "LIGHT TO MODERATE"
   WN$(2) = "STRONG AND GUSTY "
   WN$(3) = "COMPUTER SELECT  "
   WT$(0) = "GOOD                          "
   WT$(1) = "BAD (RAIN/SNOW)               "
   WT$(2) = "TERRIBLE (BLIZZARD/HEAVY RAIN)"
   WT$(3) = "COMPUTER SELECT               "
   SD$(0) = "NO OVERTIME          "
   SD$(1) = "ONE 15-MINUTE QUARTER"
   SD$(2) = "SUDDEN DEATH TO WIN  "
   SD$(3) = "NCAA DIVISION I-AA   "
   R5$(0) = "Y": R5$(1) = "N"
   Y8$(0) = "1978-1993": Y8$(1) = "PRE-1974 ": Y8$(2) = "1974-1977": Y8$(3) = "POST-1993"
   Y9$(0) = "PRE-1968 ": Y9$(1) = "1968-1980": Y9$(2) = "1981-1983": Y9$(3) = "1984-1991": Y9$(4) = "1991     ": Y9$(5) = "POST-1991"
   LO$(1) = "Y": LO$(2) = "N"


11  CALL TITLE

     LOCATE 16: PRINT : COLOR 2
     PRINT "GENERATING A STANDARD SEASON SCHEDULE IS TO BE USED IN CONJUNCTION"
     PRINT "WITH THE STANDINGS AND LEAGUE LEADERS OPTIONS. YOU MUST ALREADY HAVE"
     PRINT "CREATED AN APPROPRIATE LEAGUE FOR THIS OPTION TO PROPERLY FUNCTION."

   ITEM$(1) = "ENTER A NEW SCHEDULE                             "
   ITEM$(2) = "RETRIEVE/EDIT/PLAY AN EXISTING SCHEDULE          "
   ITEM$(3) = "EXTRACT ONE TEAM'S SCHEDULE FROM LEAGUE SCHEDULE "
   ITEM$(4) = "EXTRACT A CONFERENCE SCHEDULE FROM MAIN SCHEDULE "
   ITEM$(5) = "CHANGE THE MODE OF PLAY FOR A TEAM IN A SCHEDULE "
   ITEM$(6) = "MAKE GLOBAL CHANGES TO A SCHEDULE                "
   ITEM$(7) = "BOXSCORE MAINTENANCE / SAVE BOXSCORE PARAMETERS  "
   ITEM$(8) = "EXIT AUTO SCHEDULER TO 3 IN 1 MENU               "

     SELECTION% = 1
     Count% = 8
     Start% = 1
     SCANCODE% = 8
     FileColr% = 31
     HiLiteColr% = 112
     Spacing% = 1
     Row% = 6
     Column% = 16
     CALL Box0(5, 15, 14, 65, 2, 31)
     CALL ShowCursor
     MMenuVert VARPTR(ITEM$(1)), SELECTION%, Start%, SCANCODE%, FileColr%, HiLiteColr%, Count%, Row%, Column%
     CALL HideCursor
     COLOR , 0
     IF SCANCODE% = 27 THEN SELECTION% = 8

     D3% = SELECTION% - 1

   ON SELECTION% GOTO 26, 600, 600, 600, 600, 600, 4500
   IF D1% >= 67 THEN RUN "HELLO.EXE"
   PRINT
   PRINT "MAKE SURE 3 IN 1 PROGRAM DISK IS IN DRIVE"
   LOCATE 23, 1: PRINT "PRESS ANY KEY TO CONTINUE"
15 I$ = INKEY$: IF I$ = "" THEN 15
   RUN "HELLO.EXE"


26 AP%(0) = 0: NS% = 0: TS% = 0
21 COLOR 15, 0: CLS
    JJ = 7
    LOCATE 6, 8: COLOR 15, 1
    PRINT " Ö"; STRING$(61, 196); "· "; : FOR II = 1 TO JJ: LOCATE 6 + II, 8
    PRINT " º"; STRING$(61, 32); "º "; : NEXT
    LOCATE 7 + JJ, 8
    PRINT " Ó"; STRING$(61, 196); "½ "; : LOCATE 7, 32
    LOCATE , 12: PRINT "ENTER NAME FOR SCHEDULE: ": PRINT
    LOCATE , 12: PRINT "THE NAME IS 8 CHARACTERS LONG WITH NO PERIODS OR"
    LOCATE , 12: PRINT "SPACES. DO NOT ADD A FILE EXTENSION, THE SCHEDULER"
    LOCATE , 12: PRINT "WILL AUTOMATICALLY ADD .SCD"
    LOCATE , 12: PRINT "SAMPLE NAMES ARE ARKANSAS, LSU68, IU76, ARK90, ETC"
    LOCATE 7, 37: INPUT F$
    IF F$ = "" THEN 21
    LOCATE 13, 12: PRINT "ANY CHANGE (YN) "
22 I$ = INKEY$: IF I$ = "" THEN 22
   IF UCASE$(I$) = "Y" THEN 21
   COLOR 15, 0
25 CLS
   LOCATE 23, 1: COLOR , 1: PRINT TAB(80); : LOCATE 23, 1
   COLOR 13: PRINT "HF"; : COLOR 14: PRINT "-HOME FIELD ADV  ";
   COLOR 13: PRINT "MA"; : COLOR 14: PRINT "-MODE OF PLAY  ";
   COLOR 11: PRINT " G"; : COLOR 14: PRINT "-GOTO GAME";
   COLOR 11: PRINT " B"; : COLOR 14: PRINT "-BOXSCORE OPTIONS"
   LOCATE 24, 1: COLOR , 1: PRINT TAB(80); : LOCATE 24, 1
   COLOR 11: PRINT "C"; : COLOR 14: PRINT "-SAVE AND CONTINUE  ";
   COLOR 11: PRINT "A"; : COLOR 14: PRINT "-ADD A GAME  ";
   COLOR 11: PRINT "D"; : COLOR 14: PRINT "-DELETE A GAME  ";
   COLOR 11: PRINT "E"; : COLOR 14: PRINT "-EDIT A GAME  ";
   COLOR 11: PRINT "PGUP  PGDN";
   LOCATE 25, 1: COLOR , 1: PRINT TAB(80); : LOCATE 25, 1
   COLOR 11: PRINT "S"; : COLOR 14: PRINT "-SORT GAMES  ";
   COLOR 11: PRINT "P"; : COLOR 14: PRINT "-PLAY GAMES   ";
   COLOR 11: PRINT "X"; : COLOR 14: PRINT "-SAVE AND EXIT  ";
   COLOR 11: PRINT "Q"; : COLOR 14: PRINT "-QUIT  ";
   COLOR 11: PRINT "R"; : COLOR 14: PRINT "-RESET SCORES";
   LOCATE 1, 1: PRINT TAB(80); : LOCATE 1, 1: PRINT F$: LOCATE 1, 33: COLOR 14: PRINT "AUTO SCHEDULER"
   COLOR , 0
50 LOCATE 2, 1
   COLOR 14
   PRINT "GAME  DATE      TIME    VISITING TEAM        HOME TEAM            MA  HF": COLOR 15
   FOR X = 1 TO 20
   LOCATE X + 2, 1
   IF X + NS% * 20 > AP%(0) THEN 100
   T1 = NG%(X + NS% * 20, 0): YN$ = YN$(X + NS% * 20, 0)
   GOSUB 8600
   V$(X) = N$
   QV$(X) = A3$(NG%(X + NS% * 20, 5))
   T1 = NG%(X + NS% * 20, 1): YN$ = YN$(X + NS% * 20, 1)
   GOSUB 8600
   H$(X) = N$
   QH$(X) = A3$(NG%(X + NS% * 20, 8))
   PRINT USING "####  "; X + NS% * 20;
   PRINT USING "##/##/##"; NG%(X + NS% * 20, 17); NG%(X + NS% * 20, 16); NG%(X + NS% * 20, 18);
   LOCATE , 17
   I$ = "A"
   HR% = NG%(X + NS% * 20, 15) / 100
   MIN% = NG%(X + NS% * 20, 15) - HR% * 100
   IF HR% = 12 THEN I$ = "P"
   IF HR% > 12 THEN HR% = HR% - 12: I$ = "P"
   TM$ = RIGHT$(STR$(HR%), 2) + ":"
   IF MIN% < 10 THEN TM$ = TM$ + "0" + RIGHT$(STR$(MIN%), 1)
   IF MIN% >= 10 THEN TM$ = TM$ + RIGHT$(STR$(MIN%), 2)
   TM$ = TM$ + I$
   PRINT TM$;
   LOCATE , 25: PRINT V$(X); " ";
   IF NG%(X + NS% * 20, 13) = 1 THEN PRINT USING "###"; VS%(X + NS% * 20);
   LOCATE , 46: PRINT H$(X); " ";
   IF NG%(X + NS% * 20, 13) = 1 THEN PRINT USING "###"; HS%(X + NS% * 20);
   LOCATE , 67: PRINT MO$(NG%(X + NS% * 20, 10));
   LOCATE , 72: IF NG%(X + NS% * 20, 2) = 1 THEN PRINT "Y" ELSE PRINT "N"
   NEXT
100 I$ = INKEY$: IF I$ = "" THEN 100
   IF UCASE$(I$) = "A" THEN GOSUB 150: GOTO 25
   IF UCASE$(I$) = "E" THEN GOSUB 140: GOTO 25
   IF UCASE$(I$) = "B" THEN 5000
   IF UCASE$(I$) = "G" THEN GOSUB 120: GOTO 25
   IF UCASE$(I$) = "D" THEN GOSUB 200: GOTO 25
   IF UCASE$(I$) = "S" THEN GOSUB 8500: GOTO 25
   IF UCASE$(I$) = "C" THEN GOSUB 350: GOTO 25
   IF UCASE$(I$) = "X" THEN GOSUB 350: GOTO 10
   IF I$ = CHR$(0) + "Q" THEN GOSUB 130: GOTO 25
   IF I$ = CHR$(0) + "I" THEN GOSUB 135: GOTO 25
   IF UCASE$(I$) = "Q" THEN 10
   IF UCASE$(I$) = "P" THEN GOSUB 350: GOTO 300
   IF UCASE$(I$) = "R" THEN GOSUB 400: GOTO 25
   GOTO 100
120 REM:GOTO A SPECIFIC PAGE
    LOCATE 23, 1: PRINT "ENTER GAME # TO GO TO        "
    LOCATE 23, 1: INPUT "ENTER GAME # TO GO TO "; NG%
    IF NG% < 1 OR NG% > AP%(0) THEN 120
    NS% = INT((NG% - 1) / 20)
    RETURN
130 REM *** PAGE DOWN ***
    IF NS% >= BS% THEN NS% = BS%: GOTO 133
    NS% = NS% + 1
133 RETURN
135 REM *** PAGE UP ***
    IF NS% = 0 THEN 137
    NS% = NS% - 1
137 RETURN
140 REM *** EDIT A GAME ***
    LOCATE 23, 1: PRINT "ENTER GAME # TO EDIT        "
    LOCATE 23, 1: INPUT "ENTER GAME # TO EDIT "; NG%
    IF NG% < 1 OR NG% > AP%(0) THEN 140
    V$ = V$(NG% - INT(NG% / 20) * 20)
    H$ = H$(NG% - INT(NG% / 20) * 20)
    QV$ = QV$(NG% - INT(NG% / 20) * 20)
    QH$ = QH$(NG% - INT(NG% / 20) * 20)
    IF NG% - INT(NG% / 20) * 20 = 0 THEN V$ = V$(20): H$ = H$(20): QV$ = QV$(20): QH$ = QH$(20)
    I$ = "A"
    HR% = INT(NG%(NG%, 15) / 100)
    MIN% = NG%(NG%, 15) - HR% * 100
    IF HR% = 12 THEN I$ = "P"
    IF HR% > 12 THEN HR% = HR% - 12: I$ = "P"
    TM$ = RIGHT$(STR$(HR%), 2) + ":"
    IF MIN% < 10 THEN TM$ = TM$ + "0" + RIGHT$(STR$(MIN%), 1)
    IF MIN% >= 10 THEN TM$ = TM$ + RIGHT$(STR$(MIN%), 2)
    TM$ = TM$ + I$
    DT$ = RIGHT$(STR$(NG%(NG%, 17)), 2) + "/"
    DYMO% = VAL(RIGHT$(STR$(NG%(NG%, 16)), 2))
    IF DYMO% < 10 THEN DYMO$ = "0" + RIGHT$(STR$(NG%(NG%, 16)), 1)
    IF DYMO% >= 10 THEN DYMO$ = RIGHT$(STR$(NG%(NG%, 16)), 2)
    DT$ = DT$ + DYMO$ + "/" + RIGHT$(STR$(NG%(NG%, 18)), 2)
    GOTO 149
150 REM *** ADD A GAME TO THE SCHEDULE ***
    V$ = "": H$ = ""
    QV$ = "": QH$ = ""
    AP%(0) = AP%(0) + 1
    NG% = AP%(0)
    BS% = INT((NG% - 1) / 20): IF NS% < BS% THEN NS% = BS%
    FOR X = 0 TO 20
    IF X = 13 THEN 139
    NG%(NG%, X) = NG%(NG% - 1, X)
139 NEXT
    FOR X = 0 TO 1: YN$(NG%, X) = YN$(NG% - 1, X): NEXT
149 CLS : COLOR 2: PRINT TAB(29); "SELECT OPENING OPTIONS": PRINT
151 LOCATE 2, 2: COLOR 14: PRINT "(1) "; : COLOR 15: PRINT U5$(NG%(NG%, 10))
    LOCATE 3, 2: COLOR 14: PRINT "(2) "; : COLOR 15: PRINT "VISITING TEAM / QB: "; V$; " / "; QV$
    LOCATE 4, 2: COLOR 14: PRINT "(3) "; : COLOR 15: PRINT "HOME TEAM / QB: "; H$; " / "; QH$
    LOCATE 5, 2: COLOR 14: PRINT "(4) "; : COLOR 15: PRINT "TYPE OF GAME: "; G9$(NG%(NG%, 3))
    LOCATE 6, 2: COLOR 14: PRINT "(5) "; : COLOR 15: PRINT "HOME FIELD ADVANTAGE: "; LO$(NG%(NG%, 2))
    LOCATE 7, 2: COLOR 14: PRINT "(6) "; : COLOR 15: PRINT USING "DISPLAY PAUSE IN SECONDS: ##.#"; NG%(NG%, 4) / 10
    LOCATE 8, 2: COLOR 14: PRINT "(7) "; : COLOR 15: PRINT "COLLEGE RULES "; Y9$(NG%(NG%, 7))
    LOCATE 9, 2: COLOR 14: PRINT "(8) "; : COLOR 15: PRINT "PRO RULES "; Y8$(NG%(NG%, 11))
160 LOCATE 10, 2: COLOR 14: PRINT "(9) "; : COLOR 15: PRINT "GAME DATE (XX-XX-XX) "; DT$; "   "
161 LOCATE 11, 2: COLOR 14: PRINT "(A) "; : COLOR 15: PRINT "GAME TIME (XX:XXP) "; TM$; "   "
    LOCATE 12, 2: COLOR 14: PRINT "(B) "; : COLOR 15: PRINT "SUDDEN DEATH "; SD$(NG%(NG%, 14))
    LOCATE 13, 2: COLOR 14: PRINT "(C) "; : COLOR 15: PRINT "WIND "; WN$(NG%(NG%, 19))
    LOCATE 14, 2: COLOR 14: PRINT "(D) "; : COLOR 15: PRINT "WEATHER "; WT$(NG%(NG%, 20))
    LOCATE 15, 2: COLOR 14: PRINT "(0) "; : COLOR 15: PRINT "ACCEPT SETTINGS"
   LOCATE 16, 2:        PRINT "NOTES: CLOCK IS STOPPED AFTER A 1ST DOWN IN COLLEGE BEGINNING IN 1968"
     LOCATE , 2:        PRINT "       HOLDING IS A 15 YARD PENALTY FOR COLLEGE PRE-1981 AND PRO PRE-1974"
     LOCATE , 2:        PRINT "       1991-PRESENT, COLLEGE HOLDING MARKED FROM POINT OF INFRACTION"
     LOCATE , 2:        PRINT "       1974-77, PRO HOLDING ON A RUN IS 10 YDS AND 15 ON A PASS"
     LOCATE , 2:        PRINT "       FROM 1978-PRESENT, ALL PRO HOLDING PENALTIES ARE 10 YARDS"
     LOCATE , 2:        PRINT "       PRE-1974, IN THE PROS, GOAL POSTS WERE ON THE GOAL LINE, THE BALL WAS"
     LOCATE , 2:        PRINT "       PLACED ON THE 20 AFTER MISSED FIELD GOALS, KICKOFFS WERE FROM THE 40"
     LOCATE , 2:        PRINT "       1992-PRESENT, COLLEGE RULES ALLOW ADVANCEMENT OF A FUMBLE"
     LOCATE , 2:        PRINT "       PRE-1984, IN COLLEGE PASS INTERFERENCE AT SPOT OF INFRACTION"; : LOCATE 1, 1
175 I$ = INKEY$: IF I$ = "" THEN 175
    IF UCASE$(I$) = "A" THEN I$ = "10"
    IF UCASE$(I$) = "B" THEN I$ = "11"
    IF UCASE$(I$) = "C" THEN I$ = "12"
    IF UCASE$(I$) = "D" THEN I$ = "13"
    I5 = VAL(I$): IF I5 < 0 OR I5 > 13 THEN 175
    ON I5 GOTO 180, 181, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193
    IF V$ <> "" AND H$ <> "" AND TM$ <> "" AND DT$ <> "" THEN 250
    GOTO 175
250 I$ = RIGHT$(TM$, 1): TM$ = LEFT$(TM$, LEN(TM$) - 1)
    MIN% = VAL(RIGHT$(TM$, 2))
    TM$ = LEFT$(TM$, LEN(TM$) - 3)
    HR% = VAL(TM$)
    IF UCASE$(I$) = "P" AND HR% < 12 THEN HR% = HR% + 12
    NG%(NG%, 15) = HR% * 100 + MIN%
    NG%(NG%, 17) = VAL(LEFT$(DT$, 2))
    NG%(NG%, 18) = VAL(MID$((DT$), 7, 2))
    NG%(NG%, 16) = VAL(MID$((DT$), 4, 2))
    RETURN
180 NG%(NG%, 10) = NG%(NG%, 10) + 1: IF NG%(NG%, 10) > 3 THEN NG%(NG%, 10) = 0
    GOTO 151
181 COLOR 15, 0: CLS
    JJ = 7
    LOCATE 6, 8: COLOR 15, 4
    PRINT " Ö"; STRING$(61, 196); "· "; : FOR II = 1 TO JJ: LOCATE 6 + II, 8
    PRINT " º"; STRING$(61, 32); "º "; : NEXT
    LOCATE 7 + JJ, 8
    PRINT " Ó"; STRING$(61, 196); "½ "; : LOCATE 7, 32
    LOCATE , 12: PRINT "ENTER DISK ID: ": PRINT
    LOCATE , 12: PRINT "THE DISK ID IS USUALLY THE LAST TWO DIGITS OF THE"
    LOCATE , 12: PRINT "SEASON DISK YOU ARE PLAYING FROM (IE. 89, 76, 67)."
    LOCATE , 12: PRINT
    LOCATE , 12: PRINT "HIT <ENTER> TO USE PREVIOUS ID"
    LOCATE 7, 27: INPUT NY$
    IF NY$ = "" THEN GOSUB 1102: GOTO 182
    YN$ = NY$
    FOR I = 1 TO 500: VV$(I) = "": NEXT
    GOSUB 1100
182 IF BO% = 1 THEN BO% = 0: GOTO 181
183 LOCATE 2, 33: COLOR PA%(2), PA%(1): PRINT N$: COLOR 15, 4
    LOCATE , 33: PRINT "ANY CHANGE (YN)"; : I$ = INKEY$: IF I$ = "" THEN 183
    IF UCASE$(I$) = "Y" THEN 181
    COLOR 15, 0
    LOCATE 24,1:PRINT "VAL 1 = " NG%, I5-2
    NG%(NG%, I5 - 2) = T1: YN$(NG%, I5 - 2) = YN$
    LOCATE 24,1:PRINT "VALUE" NG%-INT(NG%/20)*20
    IF I5 = 2 THEN V$ = N$: V$(NG% - INT(NG% / 20) * 20) = N$
    IF I5 = 3 THEN H$ = N$: H$(NG% - INT(NG% / 20) * 20) = N$
    GOSUB 8300
    IF I5 = 2 THEN QV$ = QB$: QV$(NG% - INT(NG% / 20) * 20) = QB$
    IF I5 = 3 THEN QH$ = QB$: QH$(NG% - INT(NG% / 20) * 20) = QB$
    GOTO 149
184 NG%(NG%, 3) = NG%(NG%, 3) + 1: IF NG%(NG%, 3) > 5 THEN NG%(NG%, 3) = 0
    GOTO 151
185 N = 1 - (NG%(NG%, 2) - 1): NG%(NG%, 2) = N + 1: GOTO 151
186 LOCATE 7, 32: INPUT U6: NG%(NG%, 4) = U6 * 10: GOTO 151
187 NG%(NG%, 7) = 1 + NG%(NG%, 7): IF NG%(NG%, 7) > 5 THEN NG%(NG%, 7) = 0
    GOTO 151
188 NG%(NG%, 11) = 1 + NG%(NG%, 11): IF NG%(NG%, 11) > 3 THEN NG%(NG%, 11) = 0
    GOTO 151
189 LOCATE 10, 27: INPUT DT$: GOTO 160
190 LOCATE 11, 25: INPUT TM$: GOTO 161
191 NG%(NG%, 14) = NG%(NG%, 14) + 1: IF NG%(NG%, 14) > 3 THEN NG%(NG%, 14) = 0
    GOTO 161
192 NG%(NG%, 19) = NG%(NG%, 19) + 1: IF NG%(NG%, 19) > 3 THEN NG%(NG%, 19) = 0
    GOTO 161
193 NG%(NG%, 20) = NG%(NG%, 20) + 1: IF NG%(NG%, 20) > 3 THEN NG%(NG%, 20) = 0
    GOTO 161
200 REM *** DELETE A GAME FROM THE SCHEDULE ***
    LOCATE 24, 1: INPUT "ENTER GAME # TO DELETE "; NG%
    IF NG% < 1 OR NG% > AP%(0) THEN 200
    FOR X = NG% TO AP%(0) - 1
    FOR X1 = 0 TO 20: NG%(X, X1) = NG%(X + 1, X1): NEXT
    VS%(X) = VS%(X + 1)
    HS%(X) = HS%(X + 1)
    FOR X1 = 0 TO 1: YN$(X, X1) = YN$(X + 1, X1): NEXT
    NEXT
    AP%(0) = AP%(0) - 1: BS% = INT((AP%(0) - 1) / 20)
    IF NS% > BS% THEN NS% = BS%
    RETURN
300 REM *** PLAY GAMES ***
    COLOR , 0: CLS
    JJ = 7
    LOCATE 6, 8: COLOR 15, 4
    PRINT " Ö"; STRING$(61, 196); "· "; : FOR II = 1 TO JJ: LOCATE 6 + II, 8
    PRINT " º"; STRING$(61, 32); "º "; : NEXT
    LOCATE 7 + JJ, 8
    PRINT " Ó"; STRING$(61, 196); "½ "; : LOCATE 7, 32
    LOCATE , 12: PRINT "TOTAL GAMES ="; AP%(0)
    LOCATE , 12: PRINT "SELECT GAME # TO START AND END WITH": PRINT
    LOCATE , 12: INPUT "ENTER START GAME #: "; SG%: PRINT
    LOCATE , 12: INPUT "ENTER END GAME #:"; EG%: PRINT
    LOCATE , 12: PRINT "ANY CHANGE (YN)"
301 I$ = INKEY$: IF I$ = "" THEN 301
    IF UCASE$(I$) = "Y" THEN 300
    IF SG% <= 0 THEN SG% = 1
    IF EG% > AP%(0) THEN EG% = AP%(0)
    OPEN "GAME82" FOR OUTPUT AS #2
    PRINT #2, F$ + ".SCD"
    PRINT #2, SG%
    PRINT #2, EG%
    PRINT #2, 0
    CLOSE 2
    GOSUB 1200
    OPEN "TICKER" FOR OUTPUT AS #2
    FOR I = 1 TO 32: FOR I1 = 0 TO 1: FOR I2 = 1 TO 14
    PRINT #2, -1: NEXT: NEXT: NEXT
    FOR I = 1 TO 32: FOR I1 = 0 TO 1: PRINT #2, "XXX"
    NEXT: NEXT
    FOR I = SG% TO SG% + 31
    PRINT #2, NG%(I, 12)
    NEXT
    CLOSE 2
335 RUN "FOOTBALL.EXE"
350 REM *** SAVE SCHEDULE FILE ***
    IF EXIST%(DRI$(0) + F$ + ".SCD") THEN KILL DRI$(0) + F$ + ".SCD"
    OPEN DRI$(0) + F$ + ".SCD" FOR RANDOM AS #1 LEN = 52
    FOR X = 0 TO 20
    FIELD #1, X * 2 AS X$, 2 AS Q$(X + 1), 52 - 2 - 2 * X AS X$
    NEXT
    FIELD #1, 42 AS X$, 3 AS Q$(22), 3 AS Q$(23), 2 AS Q$(24), 2 AS Q$(25)
    FOR I = 1 TO AP%(0)
    FOR X = 0 TO 20: LSET Q$(X + 1) = MKI$(NG%(I, X)): NEXT
    FOR X = 0 TO 1: LSET Q$(22 + X) = YN$(I, X): NEXT
    LSET Q$(24) = MKI$(VS%(I)): LSET Q$(25) = MKI$(HS%(I))
    PUT #1, I
    NEXT
    CLOSE 1
    RETURN
400 REM *** RESET GAMES ***
    FOR I = 1 TO AP%(0)
    NG%(I, 13) = 0
    NEXT
    RETURN
600 REM *** LOAD IN A SAVED SCHEDULE ***
    Spec$ = DRI$(0) + "*.SCD"
    GOSUB 2100
    OPEN DRI$(0) + F$ + ".SCD" FOR RANDOM AS #1 LEN = 52
    Y = LOF(1)
    CLOSE 1
    AP%(0) = Y / 52
    BS% = INT((AP%(0) - 1) / 20)
    OPEN DRI$(0) + F$ + ".SCD" FOR RANDOM AS #1 LEN = 52
    FOR X = 0 TO 20
    FIELD #1, X * 2 AS X$, 2 AS Q$(X + 1), 52 - 2 - 2 * X AS X$
    NEXT
    FIELD #1, 42 AS X$, 3 AS Q$(22), 3 AS Q$(23), 2 AS Q$(24), 2 AS Q$(25)
    FOR I = 1 TO AP%(0)
    GET #1, I
    FOR X = 0 TO 20: NG%(I, X) = CVI(Q$(X + 1)): NEXT
    FOR X = 0 TO 1: YN$(I, X) = Q$(22 + X): NEXT
    VS%(I) = CVI(Q$(24)): HS%(I) = CVI(Q$(25))

    NG%(I, 0) = NG%(I, 0) + 39
    NG%(I, 1) = NG%(I, 1) + 39

    NEXT
    CLOSE 1: NS% = 0: TS% = 0
    IF D3% = 2 OR D3% = 3 OR D3% = 4 OR D3% = 5 THEN 700
    GOTO 25
700 REM:EXTRACT A SCHEDULE FROM ANOTHER
    IF D3% = 4 THEN 725
    IF D3% = 5 THEN GOSUB 900: GOSUB 350: GOTO 25
    COLOR 15, 0: CLS
    JJ = 7
    LOCATE 6, 8: COLOR 15, 1
    PRINT " Ö"; STRING$(61, 196); "· "; : FOR II = 1 TO JJ: LOCATE 6 + II, 8
    PRINT " º"; STRING$(61, 32); "º "; : NEXT
    LOCATE 7 + JJ, 8
    PRINT " Ó"; STRING$(61, 196); "½ "; : LOCATE 7, 32
    LOCATE , 12: PRINT "ENTER NAME FOR SUB-SCHEDULE: ": PRINT
    LOCATE , 12: PRINT "THE NAME IS 8 CHARACTERS LONG WITH NO PERIODS OR"
    LOCATE , 12: PRINT "SPACES. DO NOT ADD A FILE EXTENSION, THE SCHEDULER"
    LOCATE , 12: PRINT "WILL AUTOMATICALLY ADD .SCD"
    LOCATE , 12: PRINT "SAMPLE NAMES ARE ARKANSAS, LSU68, IU76, ARK90, ETC"
    LOCATE 7, 37: INPUT SF$
    IF SF$ = "" THEN 700
    LOCATE 13, 12: PRINT "ANY CHANGE (YN) "
705 I$ = INKEY$: IF I$ = "" THEN 705
   IF UCASE$(I$) = "Y" THEN 700
   COLOR 15, 0
   CLS
725 IF D3% = 3 THEN 800
    COLOR 15, 0: CLS
    JJ = 7
    LOCATE 6, 8: COLOR 15, 4
    PRINT " Ö"; STRING$(61, 196); "· "; : FOR II = 1 TO JJ: LOCATE 6 + II, 8
    PRINT " º"; STRING$(61, 32); "º "; : NEXT
    LOCATE 7 + JJ, 8
    PRINT " Ó"; STRING$(61, 196); "½ "; : LOCATE 7, 32
    LOCATE , 12: PRINT "ENTER DISK ID: ": PRINT
    LOCATE , 12: PRINT "THE DISK ID IS USUALLY THE LAST TWO DIGITS OF THE"
    LOCATE , 12: PRINT "SEASON DISK YOU ARE PLAYING FROM (IE. 89, 76, 67)."
    LOCATE , 12: PRINT
    LOCATE , 12: PRINT "HIT <ENTER> TO USE PREVIOUS ID"
    LOCATE 7, 27: INPUT NY$
    IF NY$ = "" THEN GOSUB 1102: GOTO 730
    YN$ = NY$
    FOR I = 1 TO 500: VV$(I) = "": NEXT
    GOSUB 1100
730 IF BO% = 1 THEN BO% = 0: GOTO 725
732 LOCATE 2, 33: COLOR PA%(2), PA%(1): PRINT N$: COLOR 15, 4
    LOCATE , 33: PRINT "ANY CHANGE (YN)"; : I$ = INKEY$: IF I$ = "" THEN 732
    IF UCASE$(I$) = "Y" THEN 725
    COLOR 15, 0
    IF D3% = 4 THEN GOSUB 775
    REM:HAVE T1 AND YN$
    FOR I = 1 TO AP%(0)
735 IF RIGHT$(YN$(I, 0), 1) = " " THEN YN$(I, 0) = LEFT$(YN$(I, 0), LEN(YN$(I, 0)) - 1): GOTO 735
736 IF RIGHT$(YN$(I, 1), 1) = " " THEN YN$(I, 1) = LEFT$(YN$(I, 1), LEN(YN$(I, 1)) - 1): GOTO 736
    IF T1 = NG%(I, 0) AND YN$ = YN$(I, 0) OR T1 = NG%(I, 1) AND YN$ = YN$(I, 1) THEN GOSUB 780: GOSUB 750
    NEXT
    IF D3% = 4 THEN GOSUB 350
    GOTO 10
750 IF D3% = 4 THEN 755
    LOCATE 1, 1: PRINT NG% + 1; " MATCHES"
    'IF NOT EXIST%(DRI$(0) + SF$ + ".SCD") THEN 752
    OPEN DRI$(0) + SF$ + ".SCD" FOR RANDOM AS #1 LEN = 52
    Y = LOF(1): GOTO 753
752 Y = 0
753 NG% = Y / 52
    FOR X = 0 TO 20
    FIELD #1, X * 2 AS X$, 2 AS Q$(X + 1), 52 - 2 - 2 * X AS X$
    NEXT
    FIELD #1, 42 AS X$, 3 AS Q$(22), 3 AS Q$(23), 2 AS Q$(24), 2 AS Q$(25)
    FOR X = 0 TO 20: LSET Q$(X + 1) = MKI$(NG%(I, X)): NEXT
    FOR X = 0 TO 1: LSET Q$(22 + X) = YN$(I, X): NEXT
    LSET Q$(24) = MKI$(VS%(I)): LSET Q$(25) = MKI$(HS%(I))
    PUT #1, NG% + 1
    CLOSE 1
755 RETURN
775 CLS
    COLOR PA%(2), PA%(1): PRINT N$; : COLOR 15, 0: PRINT " IS TO BE:"
    PRINT
    PRINT "(0) MANUALLY CONTROLLED": PRINT
    PRINT "(1) COMPUTER CONTROLLED"
776 I$ = INKEY$: IF I$ = "" THEN 776
    I1 = VAL(I$)
    IF I1 < 0 OR I1 > 1 THEN 776
    INPUT "ENTER DISPLAY VARIABLE FOR THESE GAMES "; U6
    U6 = U6 * 10
    RETURN
780 REM: CHANGE SETTINGS FOR A TEAM
    IF T1 = NG%(I, 0) AND YN$ = YN$(I, 0) THEN NG%(I, 10) = 2
    IF T1 = NG%(I, 1) AND YN$ = YN$(I, 1) THEN NG%(I, 10) = 1
    IF (T1 = NG%(I, 0) AND YN$ = YN$(I, 0) OR T1 = NG%(I, 1) AND YN$ = YN$(I, 1)) AND I1 = 1 AND D3% = 4 THEN NG%(I, 10) = 3
    NG%(I, 4) = U6
    RETURN
800 Spec$ = DRI$(2) + "*.LIB"
    Count% = FCount%(Spec$)
    IF Count% = 0 THEN 4400
    REDIM F$(0 TO Count%)
    FOR X = 1 TO Count%
    F$(X) = SPACE$(12)
    NEXT
    F$(0) = Spec$
    CALL ReadFile(VARPTR(F$(0)))
    CALL SortStr(VARPTR(F$(1)), Count%, 0)
    GOSUB 1310
    OPEN DRI$(2) + F$ + ".LIB" FOR INPUT AS #1


    INPUT #1, X%
    IF X% = 0 THEN
       INPUT #1, LG$
       INPUT #1, X$:INPUT #1, X$
       FOR X = 1 TO 30
       INPUT #1, Z1$(X): INPUT #1, Z1%(X): INPUT #1, Z2$(X)
       NEXT
       NT = 30
       CLOSE 1
    END IF
    IF X% = 1 THEN INPUT #1, LG$: FOR X = 1 TO 30: INPUT #1, Z1$(X): INPUT #1, Z1%(X): INPUT #1, Z2$(X): NEXT: NT = 30: CLOSE 1
    FOR I = 1 TO AP%(0)
835 IF RIGHT$(YN$(I, 0), 1) = " " THEN YN$(I, 0) = LEFT$(YN$(I, 0), LEN(YN$(I, 0)) - 1): GOTO 835
836 IF RIGHT$(YN$(I, 1), 1) = " " THEN YN$(I, 1) = LEFT$(YN$(I, 1), LEN(YN$(I, 1)) - 1): GOTO 836
    FOR I1 = 1 TO NT
    IF Z1$(I1) = "XXX" THEN 837
    IF Z1%(I1) = NG%(I, 0) AND Z2$(I1) = YN$(I, 0) OR Z1%(I1) = NG%(I, 1) AND Z2$(I1) = YN$(I, 1) THEN GOSUB 850: GOTO 838
837 NEXT I1
838 NEXT I
    GOTO 10
850 PRINT "FOUND A MATCH"
'    IF NOT EXIST%(DRI$(0) + SF$ + ".SCD") THEN 852
    OPEN DRI$(0) + SF$ + ".SCD" FOR RANDOM AS #1 LEN = 52
    Y = LOF(1): GOTO 853
852 Y = 0
853 NG% = Y / 52
854 PRINT Y, NG%
855 FOR X = 0 TO 20
856 FIELD #1, X * 2 AS X$, 2 AS Q$(X + 1), 52 - 2 - 2 * X AS X$
857 NEXT
858 FIELD #1, 42 AS X$, 3 AS Q$(22), 3 AS Q$(23), 2 AS Q$(24), 2 AS Q$(25)
859 FOR X = 0 TO 20: LSET Q$(X + 1) = MKI$(NG%(I, X)): NEXT
860 FOR X = 0 TO 1: LSET Q$(22 + X) = YN$(I, X): NEXT
861 LSET Q$(24) = MKI$(VS%(I)): LSET Q$(25) = MKI$(HS%(I))
862 PUT #1, NG% + 1
863 CLOSE 1
864 RETURN

900 REM: GLOBAL SETTINGS FOR A SCHEDULE
    WN% = 3: WT% = 3
    COLOR 15, 0: CLS : PRINT TAB(30); "GLOBAL SETTINGS FOR SCHEDULE"
901 LOCATE 3, 2: COLOR 14: PRINT "(1) "; : COLOR 15: PRINT "TYPE OF GAME: "; G9$(G9%)
    LOCATE 4, 2: COLOR 14: PRINT "(2) "; : COLOR 15: PRINT USING "DISPLAY PAUSE IN SECONDS: ##.#  "; U6 / 10
    LOCATE 5, 2: COLOR 14: PRINT "(3) "; : COLOR 15: PRINT "FUNCTION NOT AVAILABLE"
    LOCATE 6, 2: COLOR 14: PRINT "(4) "; : COLOR 15: PRINT "COLLEGE RULES: "; Y9$(Y9%)
    LOCATE 7, 2: COLOR 14: PRINT "(5) "; : COLOR 15: PRINT "PRO RULES: "; Y8$(Y8%)
    LOCATE 8, 2: COLOR 14: PRINT "(6) "; : COLOR 15: PRINT "SUDDEN DEATH: "; SD$(SD%)
    LOCATE 9, 2: COLOR 14: PRINT "(7) "; : COLOR 15: PRINT "WIND OPTION: "; WN$(WN%)
    LOCATE 10, 2: COLOR 14: PRINT "(8) "; : COLOR 15: PRINT "WEATHER OPTION: "; WT$(WT%)
    LOCATE 12, 2: COLOR 14: PRINT "(9) "; : COLOR 15: PRINT "ACCEPT GLOBAL SETTINGS"
905 I$ = INKEY$: IF I$ = "" THEN 905
    I = VAL(I$)
    IF I < 1 OR I > 9 THEN 905
    IF I = 1 THEN
         G9% = G9% + 1
         IF G9% > 5 THEN G9% = 0
         GOTO 901
    END IF
    IF I = 3 THEN   901
    IF I = 4 THEN
         Y9% = Y9% + 1
         IF Y9% > 5 THEN Y9% = 0
         GOTO 901
    END IF
    IF I = 5 THEN
         Y8% = Y8% + 1
         IF Y8% > 3 THEN Y8% = 0
         GOTO 901
    END IF
    IF I = 6 THEN
       SD% = SD% + 1
       IF SD% > 3 THEN SD% = 0
       GOTO 901
    END IF
    IF I = 7 THEN
         WN% = WN% + 1
         IF WN% > 3 THEN WN% = 0
         GOTO 901
    END IF
    IF I = 8 THEN
         WT% = WT% + 1
         IF WT% > 3 THEN WT% = 0
         GOTO 901
    END IF
    IF I = 2 THEN INPUT "DISPLAY VARIABLE "; U6: U6 = U6 * 10: GOTO 901

    FOR I = 1 TO AP%(0)
        NG%(I, 3) = G9%
        NG%(I, 4) = U6
        NG%(I, 7) = Y9%
        NG%(I, 11) = Y8%
        NG%(I, 14) = SD%
        NG%(I, 19) = WN%
        NG%(I, 20) = WT%
    NEXT
    RETURN

1100 NT = 0
     OPEN DRI$(0) + "FOOT." + YN$ FOR RANDOM AS #1 LEN = 934
     Y = LOF(1)
     FIELD #1, 15 AS Q$(0), 640 AS X$
     FOR I1 = 1 TO Y / 934
     GET #1, I1
     FOR I2 = 1 TO 15
     IF ASC(MID$(Q$(0), I2, 1)) < 32 OR ASC(MID$(Q$(0), I2, 1)) > 123 OR UCASE$(LEFT$(Q$(0), 3)) = "NOT" OR UCASE$(LEFT$(Q$(0), 3)) = "UN" THEN 1105
     NEXT I2
     NT = NT + 1
     VV$(NT) = Q$(0): V%(NT) = I1
1105 NEXT I1
     CLOSE 1

1102 SELECTION% = 1
     Count% = NT
     Start% = 1
     FileColr% = 79
     HiLiteColr% = 112
     Rows% = 20
     Columns% = 4
     Spacing% = 6
     Row% = 4
     Column% = 1
     COLOR , 4: CLS : LOCATE , 33: COLOR 14
     PRINT "TEAM SELECTION": COLOR 15
     LOCATE 25, 1: COLOR 14: PRINT "ESC"; : COLOR 15
     PRINT "-SELECT NEW ID  PGDN  PGUP  "; : COLOR 14
     PRINT "ENTER"; : COLOR 15: PRINT "-SELECTS TEAM";
     CALL ShowCursor
20   MAMenu VARPTR(VV$(1)), SELECTION%, Start%, Count%, EXITCODE%, FileColr%, HiLiteColr%, Rows%, Columns%, Spacing%, Row%, Column%
     CALL HideCursor
     IF EXITCODE% = 27 THEN BO% = 1: RETURN
     IF EXITCODE% = -71 THEN Start% = 1: EXITCODE% = 3: SELECTION% = 1: GOTO 20
     IF EXITCODE% = -79 THEN Start% = NT: EXITCODE% = 3: SELECTION% = NT: GOTO 20
     IF EXITCODE% = -73 THEN Start% = Start% - 80: IF Start% < 1 THEN Start% = 1
     IF EXITCODE% = -81 THEN Start% = Start% + 80: IF Start% > NT THEN Start% = NT
     IF EXITCODE% = -81 OR EXITCODE% = -73 THEN EXITCODE% = 3: SELECTION% = Start%: GOTO 20
     T1 = V%(SELECTION%)
     GOTO 9000


1200 FOR I = 1 TO AP%(0)
     HR% = INT(NG%(I, 15) / 100)
     MIN% = NG%(I, 15) - HR% * 100
     TM% = HR% * 60 + MIN%
     NG%(I, 12) = INT(TM% / 30 - 18)
     NEXT
     RETURN

2100 Count% = FCount%(Spec$)
     IF Count% = 0 THEN 4400
     REDIM F$(0 TO Count%)
     FOR X = 1 TO Count%
     F$(X) = SPACE$(12)
     NEXT
     F$(0) = Spec$
     CALL ReadFile(VARPTR(F$(0)))
     CALL SortStr(VARPTR(F$(1)), Count%, 0)

1310 CLS
    COLOR , 1
    CLS
    LOCATE , 28
    COLOR 14
    PRINT "SELECT SCHEDULE TO VIEW": COLOR 15
     SELECTION% = 1
     Start% = 1
     FileColr% = 31
     HiLiteColr% = 112
     Rows% = 20
     Columns% = 4
     Spacing% = 6
     Row% = 4
     Column% = 1
    LOCATE 25, 1
    COLOR 14
    PRINT "ENTER"; : COLOR 15
    PRINT "-SELECTS SCHEDULE";
CALL ShowCursor
320 MAMenu VARPTR(F$(1)), SELECTION%, Start%, Count%, EXITCODE%, FileColr%, HiLiteColr%, Rows%, Columns%, Spacing%, Row%, Column%
CALL HideCursor
     IF EXITCODE% = 27 THEN 2900
     IF EXITCODE% = -71 THEN Start% = 1: EXITCODE% = 3: SELECTION% = 1: GOTO 320
     IF EXITCODE% = -79 THEN Start% = Count%: EXITCODE% = 3: SELECTION% = Count%: GOTO 320
     IF EXITCODE% = -73 THEN Start% = Start% - 80: IF Start% < 1 THEN Start% = 1
     IF EXITCODE% = -81 THEN Start% = Start% + 80: IF Start% > Count% THEN Start% = Count%
     IF EXITCODE% = -81 OR EXITCODE% = -73 THEN EXITCODE% = 3: SELECTION% = Start%: GOTO 320
     F$ = F$(SELECTION%)
   LOCATE 2, 33: PRINT F$: LOCATE , 33: PRINT "ANY CHANGE (YN)";
     COLOR 15, 0
3910 I$ = INKEY$: IF I$ = "" THEN 3910
    IF UCASE$(I$) = "Y" THEN 1310
3911 F$ = QPRTrim$(F$)
    WE$ = LEFT$(F$, LEN(F$) - 4)
    COLOR 15, 0
    F$ = WE$
    RETURN

8500 REM *** SORT SCHEDULE ***
     FOR I = 1 TO AP%(0)
     HR% = INT(NG%(I, 15) / 100)
     MIN% = NG%(I, 15) - HR% * 100
     TM% = HR% * 60 + MIN%
     NG%(I, 12) = INT(TM% / 30 - 18)
     D = (NG%(I, 18) - 1): D = D * 365
     M = (NG%(I, 17) - 1): M = M * 31
     Y = NG%(I, 16)
     DY(I) = (D + M + Y) * 24 * 60 + TM%
     NEXT
     FOR Z = 1 TO AP%(0) - 1: FOR Z1 = Z + 1 TO AP%(0)
     LOCATE 1, 1: PRINT Z, Z1
     IF NG%(Z, 12) <= NG%(Z1, 12) THEN 8505
     GOSUB 8525
8505 NEXT Z1: NEXT Z
     FOR Z = 1 TO AP%(0) - 1: FOR Z1 = Z + 1 TO AP%(0)
     IF DY(Z) <= DY(Z1) THEN 8510
     GOSUB 8525
8510 NEXT Z1: NEXT Z
     RETURN
8525 FOR I = 0 TO 20: SWAP NG%(Z, I), NG%(Z1, I): NEXT
     FOR I = 0 TO 1: SWAP YN$(Z, I), YN$(Z1, I): NEXT
     SWAP DY(Z), DY(Z1)
     SWAP VS%(Z), VS%(Z1)
     SWAP HS%(Z), HS%(Z1)
     RETURN
8600 OPEN DRI$(0) + "FOOT." + YN$ FOR RANDOM AS #1 LEN = 934
     FIELD #1, 15 AS Q$(1)
     FIELD #1, 200 AS Q$(0), 152 AS Q$(201), 12 AS Q$(84), 2 AS Q$(85), 2 AS Q$(86), 2 AS Q$(87), 2 AS Q$(88), 12 AS Q$(89), 2 AS Q$(90), 2 AS Q$(91), 2 AS Q$(92), 2 AS Q$(93), 200 AS Q$(199), 200 AS Q$(200), 142 AS Q$(202)
     FIELD #1, 200 AS Q$(0), 192 AS Q$(201), 12 AS Q$(94), 2 AS Q$(95), 2 AS Q$(96), 2 AS Q$(97), 2 AS Q$(98), 12 AS Q$(99), 2 AS Q$(100), 2 AS Q$(101), 2 AS Q$(102), 2 AS Q$(103), 200 AS Q$(199), 200 AS Q$(200), 102 AS Q$(202)
     GET #1, T1
     N$ = Q$(1)
     FOR I1 = 0 TO 3
     A3$(I1) = Q$(I1 * 5 + 84)
     NEXT I1
     CLOSE 1
     RETURN
9000 OPEN DRI$(0) + "FOOT." + YN$ FOR RANDOM AS #1 LEN = 934
9501 FIELD #1, 15 AS Q$(1), 15 AS Q$(2), 2 AS Q$(3), 2 AS Q$(4), 2 AS Q$(5), 2 AS Q$(6), 2 AS Q$(7), 2 AS Q$(8), 2 AS Q$(9), 2 AS Q$(10), 2 AS Q$(11), 2 AS Q$(12), 2 AS Q$(13), 2 AS Q$(14), 2 AS Q$(15), 200 AS Q$(0), 200 AS Q$(199), 200 AS Q$, 200  _
AS Q$, 78 AS Q$(0)
9502 FIELD #1, 56 AS Q$(0), 12 AS Q$(16), 2 AS Q$(17), 2 AS Q$(18), 2 AS Q$(19), 2 AS Q$(20), 12 AS Q$(21), 2 AS Q$(22), 2 AS Q$(23), 2 AS Q$(24), 2 AS Q$(25), 200 AS Q$, 200 AS Q$(200), 238 AS Q$(201), 200 AS Q$
9503 FIELD #1, 96 AS Q$(0), 12 AS Q$(26), 2 AS Q$(27), 2 AS Q$(28), 2 AS Q$(29), 2 AS Q$(30), 12 AS Q$(31), 2 AS Q$(32), 2 AS Q$(33), 2 AS Q$(34), 2 AS Q$(35), 200 AS Q$(199), 200 AS Q$(200), 198 AS Q$(201), 200 AS Q$
9504 FIELD #1, 136 AS Q$(0), 12 AS Q$(36), 2 AS Q$(37), 2 AS Q$(38), 2 AS Q$(39), 2 AS Q$(40), 12 AS Q$(41), 2 AS Q$(42), 2 AS Q$(43), 2 AS Q$(44), 2 AS Q$(45), 200 AS Q$(199), 200 AS Q$(200), 158 AS Q$(201), 200 AS Q$
9505 FIELD #1, 176 AS Q$(0), 12 AS Q$(46), 2 AS Q$(47), 2 AS Q$(48), 2 AS Q$(49), 2 AS Q$(50), 12 AS Q$(51), 2 AS Q$(52), 2 AS Q$(53), 2 AS Q$(54), 2 AS Q$(55), 200 AS Q$(199), 200 AS Q$(200), 118 AS Q$(201), 200 AS Q$
9506 FIELD #1, 216 AS Q$(0), 12 AS Q$(56), 2 AS Q$(57), 2 AS Q$(58), 2 AS Q$(59), 2 AS Q$(60), 12 AS Q$(61), 2 AS Q$(62), 2 AS Q$(63), 2 AS Q$(64), 2 AS Q$(65), 200 AS Q$(199), 200 AS Q$(200), 78 AS Q$(201), 200 AS Q$
9507 FIELD #1, 200 AS Q$(0), 56 AS Q$, 12 AS Q$(66), 2 AS Q$(67), 2 AS Q$(68), 12 AS Q$(69), 2 AS Q$(70), 2 AS Q$(71), 12 AS Q$(72), 2 AS Q$(73), 2 AS Q$(74), 200 AS Q$(99), 200 AS Q$(200), 200 AS Q$, 30 AS Q$
9508 FIELD #1, 200 AS Q$(0), 100 AS Q$, 4 AS Q$(201), 12 AS Q$(75), 2 AS Q$(76), 2 AS Q$(77), 12 AS Q$(78), 2 AS Q$(79), 2 AS Q$(80), 12 AS Q$(81), 2 AS Q$(82), 2 AS Q$(83), 200 AS Q$(199), 182 AS Q$(200), 200 AS Q$
9509 FIELD #1, 200 AS Q$(0), 152 AS Q$(201), 12 AS Q$(84), 2 AS Q$(85), 2 AS Q$(86), 2 AS Q$(87), 2 AS Q$(88), 12 AS Q$(89), 2 AS Q$(90), 2 AS Q$(91), 2 AS Q$(92), 2 AS Q$(93), 200 AS Q$(199), 200 AS Q$(200), 142 AS Q$(202)
9510 FIELD #1, 200 AS Q$(0), 192 AS Q$(201), 12 AS Q$(94), 2 AS Q$(95), 2 AS Q$(96), 2 AS Q$(97), 2 AS Q$(98), 12 AS Q$(99), 2 AS Q$(100), 2 AS Q$(101), 2 AS Q$(102), 2 AS Q$(103), 200 AS Q$(199), 200 AS Q$(200), 102 AS Q$(202)
9511 FIELD #1, 200 AS Q$(0), 200 AS Q$(199), 32 AS Q$(200), 12 AS Q$(104), 2 AS Q$(105), 2 AS Q$(106), 12 AS Q$(107), 2 AS Q$(108), 2 AS Q$(109), 12 AS Q$(110), 2 AS Q$(111), 2 AS Q$(112), 200 AS Q$(201), 200 AS Q$(202), 54 AS Q$(203)
9512 FIELD #1, 200 AS Q$(0), 200 AS Q$(199), 80 AS Q$(200), 12 AS Q$(113), 2 AS Q$(114), 2 AS Q$(115), 12 AS Q$(116), 2 AS Q$(117), 2 AS Q$(118), 12 AS Q$(119), 2 AS Q$(120), 2 AS Q$(121), 200 AS Q$(201), 200 AS Q$(202), 6 AS Q$(203)
9513 FIELD #1, 200 AS Q$, 200 AS Q$, 128 AS Q$, 12 AS Q$(122), 2 AS Q$(123), 12 AS Q$(124), 2 AS Q$(125), 2 AS Q$(126), 2 AS Q$(127), 2 AS Q$(128), 12 AS Q$(129), 2 AS Q$(130), 2 AS Q$(131), 2 AS Q$(132), 2 AS Q$(133), 2 AS Q$(134), 200 AS Q$, 150  _
AS Q$
9514 FIELD #1, 200 AS Q$(0), 200 AS Q$(199), 184 AS Q$(200), 12 AS Q$(135), 2 AS Q$(136), 12 AS Q$(137), 2 AS Q$(138), 12 AS Q$(139), 2 AS Q$(140), 12 AS Q$(141), 2 AS Q$(142), 12 AS Q$(143), 2 AS Q$(144), 200 AS Q$(201), 80 AS Q$(202)
9515 FIELD #1, 200 AS Q$(0), 100 AS Q$, 200 AS Q$(199), 154 AS Q$(200), 12 AS Q$(145), 2 AS Q$(146), 12 AS Q$(147), 2 AS Q$(148), 12 AS Q$(149), 2 AS Q$(150), 12 AS Q$(151), 2 AS Q$(152), 12 AS Q$(153), 2 AS Q$(154), 200 AS Q$(201), 10 AS Q$(202)
9516 FIELD #1, 200 AS Q$(0), 100 AS Q$, 200 AS Q$(199), 224 AS Q$(200), 12 AS Q$(155), 2 AS Q$(156), 12 AS Q$(157), 2 AS Q$(158), 12 AS Q$(159), 2 AS Q$(160), 12 AS Q$(161), 2 AS Q$(162), 12 AS Q$(163), 2 AS Q$(164), 140 AS Q$(201)
9517 FIELD #1, 200 AS Q$(0), 200 AS Q$, 200 AS Q$(199), 194 AS Q$(200), 12 AS Q$(165), 2 AS Q$(166), 12 AS Q$(167), 2 AS Q$(168), 12 AS Q$(169), 2 AS Q$(170), 12 AS Q$(171), 2 AS Q$(172), 12 AS Q$(173), 2 AS Q$(174), 70 AS Q$(201)
9518 FIELD #1, 232 AS Q$(0), 200 AS Q$, 200 AS Q$(199), 232 AS Q$(200), 12 AS Q$(175), 2 AS Q$(176), 12 AS Q$(177), 2 AS Q$(178), 12 AS Q$(179), 2 AS Q$(180), 12 AS Q$(181), 2 AS Q$(182), 12 AS Q$(183), 2 AS Q$(184)
9519 GET #1, T1
9520 N$ = Q$(1)
9522 FOR I1 = 0 TO 4: PA%(I1) = CVI(Q$(I1 + 11)): NEXT I1
9535 FOR I1 = 0 TO 3
9536 A3$(I1) = Q$(I1 * 5 + 84)
9537 A6(I1) = CVI(Q$(I1 * 5 + 85))
9538 A7(I1) = CVI(Q$(I1 * 5 + 86))
9539 A8(I1) = CVI(Q$(I1 * 5 + 87))
9540 QX%(I1) = CVI(Q$(I1 * 5 + 88))
9548 NEXT I1
     CLOSE 1
9005 IF RIGHT$(N$, 1) = " " THEN N$ = LEFT$(N$, LEN(N$) - 1): GOTO 9005
     RETURN
8300 CLS : PRINT "SELECT QUARTERBACK": PRINT " # QB NAME    % OF  COMP  INT": PRINT "              ATTS  PCT   PCT"
8301 FOR I1 = 0 TO 3: IF A3$(I1) = "XXX" OR A3$(I1) = "END" OR A3$(I1) = "" THEN 8307
8302 IF I1 = 0 THEN 8304
8303 IF A6(I1 - 1) >= 100 THEN 8307
8304 PRINT I1; "-"; A3$(I1); : LOCATE , 14: IF I1 = 0 THEN PRINT A6(I1); : GOTO 8306
8305 IF I1 > 0 THEN PRINT INT(A6(I1)) - A6(I1 - 1);
8306 LOCATE , 20: PRINT A7(I1); : LOCATE , 26: PRINT A8(I1)
8307 LOCATE , 1: NEXT I1
     PRINT " 4 -COMPUTER SELECT QUARTERBACK"
8309 PRINT : LOCATE , 1: PRINT "SELECT (0-4) ";
8310 I$ = INKEY$: IF I$ = "" THEN 8310
8311 I2 = VAL(I$): IF I2 < 0 OR I2 > 4 THEN 8300
8312 Q6% = I2
8313 IF NG%(NG%, 3) = 0 OR I2 > 3 THEN 8320
8314 PRINT "ENTER "; A3$(I2); " MOBILITY RATING (1-9)"
8318 I$ = INKEY$: IF I$ = "" THEN 8318
8319 R9% = VAL(I$): IF R9% < 1 OR R9% > 9 THEN 8314
8320 NG%(NG%, (I5 - 2) * 3 + 5) = Q6%: NG%(NG%, (I5 - 2) * 3 + 6) = R9%
     A3$(4) = "RANDOM"
     QB$ = A3$(I2)
     RETURN
4400 LOCATE 10, 8
     GOSUB 4600
     PRINT "NO LEAGUE FILES WERE FOUND"
     PRINT "PRESS ANY KEY TO RETURN TO MAIN MENU"
3805 I$ = INKEY$: IF I$ = "" THEN 3805
     GOTO 2900

4600 JJ = 4
     LOCATE 6, 8: COLOR 15, 1
     PRINT " "; CHR$(201); STRING$(61, 205); CHR$(187); " ";
     FOR II = 1 TO JJ: LOCATE 6 + II, 8
     PRINT " º"; STRING$(61, 32); "º "; : NEXT
     LOCATE 7 + JJ, 8
     PRINT " "; CHR$(200); STRING$(61, 205); CHR$(188); " "; : LOCATE 7
     RETURN
2900 IF DRIVE >= 67 THEN 2905
     CLS
     PRINT "MAKE SURE PROGRAM DISK 3 IS IN DRIVE"
     CALL GETKEY
2905 RUN "HELLO.EXE"

'EDIT THE PARAMETERS TO SAVE A SPECIAL EVENTS BOXSCORE
5070 IF NOT EXIST%("EVENTS.BOX") THEN 5075
     OPEN "EVENTS.BOX" FOR INPUT AS #1
     FOR X = 1 TO 13
     INPUT #1, E%(X)
     NEXT
     CLOSE 1
5075 CLS : COLOR 14
     PRINT "PARAMETERS FOR SAVING SPECIAL EVENTS BOXSCORES": X% = 2: COLOR 15
     PRINT " 1. IF QUARTERS ARE OVER "; E%(1)
     PRINT " 2. A TEAM'S POINTS MORE THAN "; E%(2)
     PRINT " 3. A TEAM'S POINTS LESS THAN "; E%(3)
     PRINT " 4. RUSHER'S YARDS MORE THAN "; E%(4)
     PRINT " 5. RUSHER'S TDS MORE THAN "; E%(5)
     PRINT " 6. RECEIVER'S YARDS MORE THAN "; E%(6)
     PRINT " 7. RECEIVER'S TDS MORE THAN "; E%(7)
     PRINT " 8. PASSER'S YARDS MORE THAN "; E%(8)
     PRINT " 9. PASSER'S TDS MORE THAN "; E%(9)
     PRINT "10. KICKER'S FGM MORE THAN "; E%(10)
     GOTO 197
147 LOCATE 2: INPUT " 1. IF QUARTERS ARE OVER "; E%(1): IF C1 = 1 THEN 197
162 LOCATE 3: INPUT " 2. A TEAM'S POINTS MORE THAN "; E%(2): IF C1 = 1 THEN 197
163 LOCATE 4: INPUT " 3. A TEAM'S POINTS LESS THAN "; E%(3): IF C1 = 1 THEN 197
148 LOCATE 5: INPUT " 4. RUSHER'S YARDS MORE THAN "; E%(4): IF C1 = 1 THEN 197
178 LOCATE 6: INPUT " 5. RUSHER'S TDS MORE THAN "; E%(5): IF C1 = 1 THEN 197
152 LOCATE 7: INPUT " 6. RECEIVER'S YARDS MORE THAN "; E%(6): IF C1 = 1 THEN 197
111 LOCATE 8: INPUT " 7. RECEIVER'S TDS MORE THAN "; E%(7): IF C1 = 1 THEN 197
112 LOCATE 9: INPUT " 8. PASSER'S YARDS MORE THAN "; E%(8): IF C1 = 1 THEN 197
153 LOCATE 10: INPUT " 9. PASSER'S TDS MORE THAN "; E%(9): IF C1 = 1 THEN 197
114 LOCATE 11: INPUT "10. KICKER'S FGM MORE THAN "; E%(10): IF C1 = 1 THEN 197
197 C1 = 1
    LOCATE 23, 1: PRINT "SELECT # TO CHANGE 1-13 (0 TO CONTINUE) ";
    INPUT B9
    ON B9 GOTO 147, 162, 163, 148, 178, 152, 111, 112, 153, 114

     OPEN "EVENTS.BOX" FOR OUTPUT AS #1
     FOR X = 1 TO 13
     PRINT #1, E%(X)
     NEXT
     CLOSE 1
     GOTO 4500

4000 LOCATE 10, 8
     CALL CSMsgBox("NO LEAGUE FILES WERE FOUND PRESS ANY KEY TO RETURN TO MAIN MENU", 26, Cnf)
3811 I$ = INKEY$: IF I$ = "" THEN 3811
     CALL CSMsgBox("", 0, Cnf)
     GOTO 10

4010 LOCATE 10, 8
     CALL CSMsgBox("NO SPECIAL EVENTS BOXSCORES WERE FOUND PRESS ANY KEY TO RETURN TO MENU", 26, Cnf)
3806 I$ = INKEY$: IF I$ = "" THEN 3806
     CALL CSMsgBox("", 0, Cnf)
     GOTO 4500

4020 LOCATE 10, 8
     CALL CSMsgBox("NO BOXSCORES WERE FOUND PRESS ANY KEY TO RETURN TO MENU", 26, Cnf)
3808 I$ = INKEY$: IF I$ = "" THEN 3808
     CALL CSMsgBox("", 0, Cnf)
     GOTO 4500

4050 LOCATE 10, 8
     CALL CSMsgBox("NO SCHEDULE FILES WERE FOUND... PRESS ANY KEY TO RETURN TO MAIN MENU", 26, Cnf)
3810 I$ = INKEY$: IF I$ = "" THEN 3810
     CALL CSMsgBox("", 0, Cnf)
     GOTO 10

4060 LOCATE 10, 8
     CALL CSMsgBox("BOXSCORE DOES NOT EXIST PRESS ANY KEY TO RETURN TO MAIN MENU", 23, Cnf)
3807 I$ = INKEY$: IF I$ = "" THEN 3807
     CALL CSMsgBox("", 0, Cnf)
     RETURN

4500 'BOXSCORE MAINTENANCE
   CALL TITLE
   ITEM$(1) = "SET PARAMETERS TO SAVE SPECIAL EVENTS BOXSCORES  "
   ITEM$(2) = "ACCESS USER SAVED AND SPECIAL EVENTS BOXSCORES   "
   ITEM$(3) = "DELETE ALL SCHEDULE GENERATED BOXSCORES          "
   ITEM$(4) = "DELETE ALL USER SAVED, & SPECIAL BOXSCORES       "
   ITEM$(5) = "DELETE ALL BOXSCORES (SCHEDULE, USER, &  SPECIAL)"
   ITEM$(6) = "RETURN TO MAIN AUTO SCHEDULER MENU               "

     SELECTION% = 1
     Count% = 6
     Start% = 1
     SCANCODE% = 6
     FileColr% = 31
     HiLiteColr% = 112
     Spacing% = 1
     Row% = 6
     Column% = 16
     CALL Box0(5, 15, 12, 65, 2, 31)
     CALL ShowCursor
     MMenuVert VARPTR(ITEM$(1)), SELECTION%, Start%, SCANCODE%, FileColr%, HiLiteColr%, Count%, Row%, Column%
     CALL HideCursor
     COLOR , 0
     IF SCANCODE% = 27 THEN SELECTION% = 6

     ON SELECTION% GOTO 5070, 5060, 5010, 5010, 5010

      GOTO 10

5000 REDIM array$(500)               'holds the main editor string array
     LOCATE 23, 1: PRINT "ENTER GAME # TO GO TO        "
     LOCATE 23, 1: INPUT "ENTER GAME # TO GO TO "; NG%
     IF NG% < 1 OR NG% > AP%(0) THEN 120
     NS% = INT((NG% - 1) / 20)
     BN$ = DRI$(1) + "box" + MID$(STR$(NG%), 2, LEN(STR$(NG%)))
     GOSUB 5050
     GOTO 25

5010 IF SELECTION% = 3 THEN Spec$ = DRI$(1) + "BOX*."
     IF SELECTION% = 4 THEN Spec$ = DRI$(1) + "*.SPC"
     IF SELECTION% = 5 THEN Spec$ = DRI$(1) + "*.SPC"
     GOSUB 5020
     IF SELECTION% = 5 THEN Spec$ = DRI$(1) + "BOX*.": GOSUB 5020
     GOTO 4500

5020 Count = FCount%(Spec$)
     IF Count = 0 AND SELECTION% = 4 THEN 4010
     IF Count = 0 AND SELECTION% = 3 THEN 4020
     IF Count = 0 AND SELECTION% = 5 THEN RETURN
     REDIM F$(0 TO Count)
     FOR X = 1 TO Count
     F$(X) = SPACE$(12)
     NEXT
     F$(0) = Spec$
     CALL ReadFile(VARPTR(F$(0)))

     FOR X = 1 TO Count
     CALL KILLFILE(DRI$(1) + F$(X))
     LOCATE 12, 34: PRINT "DELETING "; F$(X)
     NEXT
     RETURN


5060 Spec$ = DRI$(1) + "*.SPC"
   Count = FCount%(Spec$)
   IF Count = 0 THEN 4010
   REDIM F$(0 TO Count)
   FOR X = 1 TO Count
       F$(X) = SPACE$(12)
   NEXT
   F$(0) = Spec$
   CALL ReadFile(VARPTR(F$(0)))
   CALL SortStr(VARPTR(F$(1)), Count, 0)

5065 CLS
    COLOR , 1
    CLS
    LOCATE , 28
    COLOR 14
    PRINT "SELECT BOXSCORE TO VIEW": COLOR 15
     SELECTION% = 1
     Start% = 1
     FileColr% = 31
     HiLiteColr% = 112
     Rows% = 20
     Columns% = 4
     Spacing% = 6
     Row% = 4
     Column% = 1
    LOCATE 25, 1
    COLOR 14
    PRINT "ENTER"; : COLOR 15
    PRINT "-SELECTS BOXSCORE";
CALL ShowCursor
MAMenu VARPTR(F$(1)), SELECTION%, Start%, Count%, EXITCODE%, FileColr%, HiLiteColr%, Rows%, Columns%, Spacing%, Row%, Column%
CALL HideCursor
     IF EXITCODE% = 27 THEN 4500
     F$ = F$(SELECTION%)
   LOCATE 2, 33: PRINT F$: LOCATE , 33: PRINT "ANY CHANGE (YN)";
     COLOR 15, 0
3912 I$ = INKEY$: IF I$ = "" THEN 3912
    IF UCASE$(I$) = "Y" THEN 5065
    BN$ = DRI$(1) + F$
    REDIM array$(500)               'holds the main editor string array
    GOSUB 5050
    GOTO 5060

'EDIT A BOXSCORE LOADED FROM THE FILE NAME BN$

5050 IF NOT EXIST%(BN$) THEN GOSUB 4060: RETURN
     OPEN BN$ FOR INPUT AS #1
     CURLINE = 1
     WHILE NOT EOF(1)
       LINE INPUT #1, array$(CURLINE)
       CURLINE = CURLINE + 1
    WEND
    CLOSE #1


    CLS                             '  show how QEdit saves the screen

    COLOR 15, 0                     'print instructions on bottom of screen
    LOCATE 25, 1
    PRINT " ESC - Quit    F1 - Help    F2 - Print Boxscore   F3 - Save Boxscore"; TAB(79);



    '----- fill in editing parameters
    SELECT CASE Monitor%            'determine the monitor type
       CASE 3, 5, 7, 9, 10, 12      'CGA, EGA, VGA monitors
          Ed.AColor = 23            'white on blue
       CASE ELSE                    'all other monitors
          Ed.AColor = 7             'white on black
    END SELECT

    Ed.Wrap = 0   'word wrap at column 65 (use 0 for to disable word wrap)
    Ed.Frame = 0  'frame code (1 = show ruler line & scroll bars, 0 = don't)
    Ed.Rows = 24   'number of text lines to display on the screen (3 - 25)
    Ed.Wide = 80   'width of the active screen (10 - 80)
    Ed.HTab = 4    'set tab stops to 4 spaces

    LOCATE 1, 1    'locate the upper left corner of the edit window frame


    Action = 1                      'Action 1 to save underlying screen and
                                    '  display text, operate in polled mode
    '----- main loop for editing
    DO
        '----- call QEdit in polled mode
        CALL QEdit(array$(), Ky$, Action, Ed)

        '----- F2 function key pressed? - change margin
IF Ky$ = F2$ THEN : FOR I = 1 TO CURLINE - 1: LPRINT array$(I): NEXT

IF Ky$ = F3$ THEN
     OPEN BN$ FOR OUTPUT AS #1
     FOR I = 1 TO CURLINE - 1
     PRINT #1, array$(I)
     NEXT
     CLOSE 1
     CALL CSMsgBox("REVISED BOXSCORE HAS BEEN SAVED...PRESS ANY KEY TO CONTINUE", 31, Cnf)
3815 I$ = INKEY$: IF I$ = "" THEN 3815
     CALL CSMsgBox("", 0, Cnf)
END IF

    LOOP UNTIL Ky$ = CHR$(27)       'keep calling QEdit until Esc is pressed

    '----- call QEdit again with an Action flag of 5 to restore the screen
    CALL QEdit(array$(), Ky$, 5, Ed)


    RETURN

STATIC SUB CSMsgBox (Message$, Wdth, Cnf AS Config)
    IF LEN(Message$) THEN
       Row = CSRLIN                             'Get the Row Position
       REDIM Temp$(23)                          'Make a temporary array to
                                                '  hold the parsed up lines
       MesLen = LEN(Message$)                   'Get the total length of the
                                                '  help message
       LN = 0                                   'Line number
       Strt = 1                                 'Starting parse position
       '*** Parse the message into lines
       DO
           WHILE MID$(Message$, Strt, 1) = " "  'Skip over blanks
              Strt = Strt + 1
           WEND
           ND = Strt + Wdth                     'Guess at the end of line
                                                'Loop backwards to find
           WHILE MID$(Message$, ND, 1) <> " " AND ND <= MesLen AND ND > Strt
               ND = ND - 1                      '  blank space
           WEND
           LN = LN + 1                          'Increment the Line number
                                                'Pull out the new line
           Temp$(LN) = MID$(Message$, Strt, ND - Strt)
           Strt = ND + 1                        'Reset starting posit. for
                                                '  next line
       LOOP UNTIL ND >= MesLen                  'Get more unless @ end of mes
       BotRow = Row + LN + 1                    'Find the bottom row #
       IF BotRow > 24 THEN BotRow = 24          'No farther than line 24
       ArraySize = 80 * (BotRow - Row + 2)      'Find the array size to use
       REDIM ScrBuf(ArraySize)                  '  for the background screen
       MScrnSave Row, 1, BotRow + 1, 80, ScrBuf(0)
       BoxWdth = Wdth + 4                       'Find the outer box width
       ColPos = 40 - (BoxWdth \ 2)              'Starting posit for centered
                                                '  box
       LOCATE Row, ColPos                       'Print the top of box
       MQPrint "É" + STRING$(Wdth + 2, "Í") + "»", Cnf.MenBox
       Box$ = "º" + SPACE$(Wdth + 2) + "º"      'Make the box sides
       FOR N = 1 TO LN                          'Print message lines
           LOCATE N + Row, ColPos
           MQPrint Box$, Cnf.MenBox
           LOCATE , ColPos + 2
           MQPrint Temp$(N), Cnf.ActivCh
       NEXT
       LOCATE N + Row, ColPos                   'Print the bottom of box
       MQPrint "È" + STRING$(Wdth + 2, "Í") + "¼", Cnf.MenBox
       MPaintBox Row + 1, ColPos + BoxWdth, N + Row, ColPos + BoxWdth + 1, 8
       MPaintBox N + Row + 1, ColPos + 2, N + Row + 1, ColPos + BoxWdth + 1, 8
       Pass = 1                                 'Set flag say we've been here
       ERASE Temp$                              'Don't need this anymore
    ELSEIF Pass = 1 THEN                        'If we've been here before,
                                                '  restore the screen
       MScrnRest Row, 1, BotRow + 1, 80, SEG ScrBuf(0)
       ERASE ScrBuf                             'Clean up memory
       Pass = 0                                 'Reset flag for next call
    END IF
END SUB

SUB GETKEY ()
12 I$ = INKEY$: IF I$ = "" THEN 12
END SUB

SUB TITLE ()
   COLOR , 0: KEY OFF: CLS
   COLOR , 1: LOCATE 1, 1: PRINT TAB(80); : LOCATE , 33: COLOR 14
   PRINT "AUTO SCHEDULER"
   LOCATE 24, 1: PRINT TAB(80); : LOCATE , 1
   PRINT "(C) LANCE HAFFNER/SHANNON LYNN 1987-1995";
   LOCATE 5, 1: COLOR , 0
END SUB

